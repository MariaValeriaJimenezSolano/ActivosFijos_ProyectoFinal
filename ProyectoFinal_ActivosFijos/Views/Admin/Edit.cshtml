@model ProyectoFinal_ActivosFijos.Models.TableViewModel.CarrosTableViewModel

@{
    ViewBag.Title = "Editar Carro";
}


<div class="container">
    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "row g-3" }))
    {

        @Html.HiddenFor(model => model.Id)


        <div class="col-md-6">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Anio, htmlAttributes: new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Anio, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Anio, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Transmision, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Transmision, new SelectList(new List<SelectListItem> {
                new SelectListItem { Text = "Transmisión Automática", Value = "Transmisión Automática" },
                new SelectListItem { Text = "Transmisión Manual", Value = "Transmisión Manual" },
                new SelectListItem { Text = "Transmisión Continuamente Variable", Value = "Transmisión Continuamente Variable" },
                new SelectListItem { Text = "Transmisión Automática de Doble Embrague", Value = "Transmisión Automática de Doble Embrague" }
            }, "Value", "Text", Model.Transmision), "Selecciona la transmision", new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Transmision, "", new { @class = "text-danger" })
        </div>
                
        <div class="form-group">
            @Html.LabelFor(model => model.Combustible, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Combustible, new SelectList(new List<SelectListItem> {
                new SelectListItem { Text = "Gasolina", Value = "Gasolina" },
                new SelectListItem { Text = "Diésel", Value = "Diésel" },
                new SelectListItem { Text = "Electricidad", Value = "Electricidad" }
            }, "Value", "Text", Model.Combustible), "Selecciona el combustible", new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Combustible, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.CantidadEnStock, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.CantidadEnStock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CantidadEnStock, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>


        <!-- Tarjeta de Imágenes -->
        <div class="row mt-4">
            <div class="row">

                <div class="col-md-4">
                    <label class="form-label">Imagen 1</label>
                    <input class="form-control" type="file" name="NuevaImagen1" onchange="mostrarImagenCargada(this, 'Imagen1', 'imagenActual1', 'contenedorImagen1')" />
                    <div id="contenedorImagen1" class="mt-3">
                        @if (Model.Imagen1 != null && Model.Imagen1.Length > 0)
                        {
                            <img id="imagenActual1" src="data:image;base64,@Convert.ToBase64String(Model.Imagen1)" class="img-thumbnail" alt="Imagen actual 1" />
                        }
                        else
                        {
                            <img id="imagenActual1" src="#" class="img-thumbnail" alt="Nueva imagen 1" style="display: none;" />
                        }
                    </div>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Imagen 2</label>
                    <input class="form-control" type="file" name="NuevaImagen2" onchange="mostrarImagenCargada(this, 'Imagen2', 'imagenActual2', 'contenedorImagen2')" />
                    <div id="contenedorImagen2" class="mt-3">
                        @if (Model.Imagen2 != null && Model.Imagen2.Length > 0)
                        {
                            <img id="imagenActual2" src="data:image;base64,@Convert.ToBase64String(Model.Imagen2)" class="img-thumbnail" alt="Imagen actual 2" />
                        }
                        else
                        {
                            <img id="imagenActual2" src="#" class="img-thumbnail" alt="Nueva imagen 2" style="display: none;" />
                        }
                    </div>
                </div>

                <div class="col-12 mt-4">
                    <input type="submit" value="Editar" class="btn btn-success" />
                    <input type="button" class="btn btn-outline-danger ms-2" value="Regresar" onclick="document.location.href = '@Url.Content("~/Admin/Index")'" />
                </div>
            </div>
        </div>

    }
</div>

<script>
    function mostrarImagenCargada(input, id, imagenId, contenedorId) {
        var imagen = document.getElementById(imagenId);
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                imagen.src = e.target.result;
                imagen.style.display = "block";
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function previewImage(input, previewId) {
        var preview = document.getElementById(previewId);
        var file = input.files[0];
        var reader = new FileReader();

        reader.onloadend = function () {
            preview.src = reader.result;
        };

        if (file) {
            reader.readAsDataURL(file);
        } else {
            preview.src = "";
        }
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<style>
    .img-thumbnail {
        width: 100%;
        max-width: 200px;
        height: auto;
    }
</style>