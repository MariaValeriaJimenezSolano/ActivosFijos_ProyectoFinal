@*@model ProyectoFinal_ActivosFijos.Models.TableViewModel.UsuariosTableViewModel

        <style>
            body {
                background-color: white;
                font-family: Arial, sans-serif;
            }

            h2 {
                text-align: center;
                margin-top: 20px;
            }

            .container-add {
                margin-top: 20px;
                padding: 20px;
                background-color: #f8f9fa;
                border-radius: 10px;
                box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
            }

            .form-group {
                margin-bottom: 20px;
            }

            .form-label {
                font-weight: bold;
            }

            .form-control {
                border: 1px solid #ced4da;
                border-radius: 5px;
                padding: 10px;
            }

            input[type="submit"],
            input[type="button"] {
                width: auto;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                input[type="submit"].btn-primary {
                    background-color: #28a745;
                    color: white;
                }

                input[type="button"].btn-outline-danger {
                    background-color: transparent;
                    border: 2px solid #dc3545;
                    color: #dc3545;
                }

                    input[type="button"].btn-outline-danger:hover {
                        background-color: #dc3545;
                        color: white;
                    }
        </style>

        <h2>Agregar un nuevo Usuario</h2>

        <div class="container-add">
            @using (Html.BeginForm("Add", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.PrimerApellido, new { @class = "form-control", type = "text" })
                            @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                            @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
                            <select id="SexoTypeDropdown" name="Sexo" class="form-control" data-val="true" data-val-required="Tipo de sexo obligatorio">
                                <option value="" selected>-- Elegir Sexo --</option>
                                <option value="Masculino">Masculino</option>
                                <option value="Femenino">Femenino</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Agregar" class="btn btn-primary" />
                        <input type="button" class="btn btn-outline-danger" value="Regresar" onclick="document.location.href = '@Url.Content("~/Usuario/Index")'" />
                    </div>
                </div>
            }
        </div>

    <!--@model ProyectoFinal_ActivosFijos.Models.TableViewModel.UsuariosTableViewModel

    <style>
        body {
            background-color: white;
            font-family: Arial, sans-serif;
        }

        h2 {
            text-align: center;
            margin-top: 20px;
        }

        .container-add {
            margin-top: 20px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: bold;
        }

        .form-control {
            border: 1px solid #ced4da;
            border-radius: 5px;
            padding: 10px;
        }

        input[type="submit"],
        input[type="button"] {
            width: auto;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            input[type="submit"].btn-primary {
                background-color: #28a745;
                color: white;
            }

            input[type="button"].btn-outline-danger {
                background-color: transparent;
                border: 2px solid #dc3545;
                color: #dc3545;
            }

                input[type="button"].btn-outline-danger:hover {
                    background-color: #dc3545;
                    color: white;
                }
    </style>-->

    @*<h2>Agregar un nuevo Usuario</h2>

        <div class="container-add">
            @using (Html.BeginForm("Add", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoDeUsuario, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.TipoDeUsuario, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.TipoDeUsuario, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                        </div>

                    </div>

                <div class="form-group text-center mt-4">
                    <input type="submit" value="Agregar" class="btn btn-primary" />
                    <input type="button" class="btn btn-outline-danger ms-2" value="Regresar" onclick="document.location.href = '@Url.Content("~/Usuario/Index")'" />
                </div>
                 }
        </div>*@

@model ProyectoFinal_ActivosFijos.Models.TableViewModel.UsuariosTableViewModel
@{
    ViewBag.Title = "Add Usuario";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    body {
        background-color: white;
        background-color: white;
        text-decoration: none;
        list-style: none;
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    h2 {
        text-align: center;
        margin-top: 20px;
    }

    .container-add {
        margin-top: 20px;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
        box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        border: 1px solid #ced4da;
        border-radius: 5px;
        /*padding: 10px;*/
    }

    input[type="submit"],
    input[type="button"] {
        width: auto;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        input[type="submit"].btn-primary {
            background-color: #898989;
            color: white;
        }
            input[type="submit"].btn-primary:hover {
                background-color: #6f6f6f;
                color: white;
            }

        input[type="button"].btn-outline-danger {
            /*background-color: transparent;*/
            border: 2px solid #f70a0a;
            /*color: #dc3545;*/
        }

            input[type="button"].btn-outline-danger:hover {
                background-color: #a30606;
                color: white;
            }
</style>

@{
    ViewBag.Title = "Agregar un nuevo Usuario";
}

<div class="container-add">
    @using (Html.BeginForm("Add", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data", @class = "row g-3" }))
    {
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipoDeUsuario, htmlAttributes: new { @class = "control-label" })
                <select id="TipoDeUsuarioDropdown" name="TipoDeUsuario" class="form-control" data-val="true" data-val-required="Tipo de usuario obligatorio">
                    <option value="" selected>-- Seleccione un tipo de usuario --</option>
                    <option value="1">Administrador</option>
                    <option value="2">Cliente</option>
                </select>
                @Html.ValidationMessageFor(model => model.TipoDeUsuario, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group text-center mt-4">
                <input type="submit" value="Agregar" class="btn btn-primary" />
                <input type="button" class="btn btn-outline-danger ms-2" value="Regresar" onclick="document.location.href = '@Url.Content("~/Usuario/Index")'" />
            </div>
        </div>
     }
</div>
